<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://hectoraaphrodite.github.io/</id>
    <title>hectoraaphrodite</title>
    <updated>2019-07-26T14:56:54.465Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://hectoraaphrodite.github.io/"/>
    <link rel="self" href="https://hectoraaphrodite.github.io//atom.xml"/>
    <subtitle>持续学习</subtitle>
    <logo>https://hectoraaphrodite.github.io//images/avatar.png</logo>
    <icon>https://hectoraaphrodite.github.io//favicon.ico</icon>
    <rights>All rights reserved 2019, hectoraaphrodite</rights>
    <entry>
        <title type="html"><![CDATA[一篇文章彻底搞懂jmeter变量引用]]></title>
        <id>https://hectoraaphrodite.github.io//post/yi-pian-wen-zhang-che-di-gao-dong-jmeter-bian-liang</id>
        <link href="https://hectoraaphrodite.github.io//post/yi-pian-wen-zhang-che-di-gao-dong-jmeter-bian-liang">
        </link>
        <updated>2019-07-26T05:03:16.000Z</updated>
        <content type="html"><![CDATA[<p>jmeter的变量赋值与引用有多个场景，可以来捋一捋。</p>
<h3 id="同线程组间跨脚本引用">同线程组间跨脚本引用</h3>
<ol>
<li>
<p>通过xxx</p>
</li>
<li>
<p>通过BeanShell处理器</p>
<ul>
<li>先赋值<br>
<img src="https://hectoraaphrodite.github.io//post-images/1564138496484.png" alt="">
引用时确保:</li>
<li>从“参数”部分删除所有逗号</li>
<li>从“参数”部分删除所有额外的空格<br>
<img src="https://hectoraaphrodite.github.io//post-images/1564138606141.png" alt=""></li>
</ul>
</li>
<li>
<p>通过jsr223处理器<br>
先使用vars.put(&quot;name1&quot;,&quot;value&quot;)，再使用 name2 = vars.get(&quot;name1&quot;) ,name2与name1可以重名，当然，&quot;value&quot;也可以用已赋值的变量名替换，但此时不能加引号，而name1需要加引号。</p>
<p><img src="https://hectoraaphrodite.github.io//post-images/1564124151605.png" alt="">
<img src="https://hectoraaphrodite.github.io//post-images/1564124358016.png" alt=""></p>
</li>
</ol>
<h3 id="跨线程组变量引用">跨线程组变量引用</h3>
<p>不论时beanshell或时jsr223处理器，都可以通过props.put(&quot;name&quot;,&quot;value&quot;)和props.get(&quot;name&quot;)组合来使用。<br>
<img src="https://hectoraaphrodite.github.io//post-images/1564152591255.png" alt="">
<img src="https://hectoraaphrodite.github.io//post-images/1564152819398.png" alt="">
<img src="https://hectoraaphrodite.github.io//post-images/1564152897701.png" alt=""></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[linux]]></title>
        <id>https://hectoraaphrodite.github.io//post/linux</id>
        <link href="https://hectoraaphrodite.github.io//post/linux">
        </link>
        <updated>2019-07-22T11:51:54.000Z</updated>
        <content type="html"><![CDATA[<p>ls
1. -a
2. -l
3. -d
4. -h
5. -i</p>
<p>mkdir</p>
<ol>
<li>-p 递归创建</li>
</ol>
<p>cp</p>
<p>mv</p>
<p>rm</p>
<p>touch</p>
<p>cat  适合小内容
1. -n 显示行号
2. tac 倒序显示</p>
<p>more 可以分页显示</p>
<ol>
<li>空格或f 翻页</li>
<li>回车 换行</li>
<li>q或Q 退出</li>
</ol>
<p>less  可以向上翻页
1. pugeup  一页一页上翻
2. ⬆         一行一行上翻
3. /            搜索
4. n           搜索之后接着往下找 next</p>
<p>head	
tail
-f  动态显示
ln
软连接 快捷方式  lrwxrwxrwx
硬连接 拷贝+同步更新   不能跨分区 不能针对目录</p>
<p>chmod
r-4 w-2 x-1
-R 递归修改</p>
<p>chown
chgrp
useradd
groupadd
umask -S</p>
<p>find
1. find [搜索范围][匹配条件]
2. find /etc -name <em>xxx</em>      通配符
3. find /etc -name abc???   匹配单个字符
4. find /etc -iname abc???   忽略大小写
5. find / -size +1024000
6. find / -user/-group xxx
7. -amin -cmin -mmin
8. -type  f,d,l
9. -a 同时满足条件 and
10. -o 满足其一即可 or
11. find /etc -name xxx -exc/-ok 命令 {} ;      -ok询问确认
12. find . -inum 12345 -exec rm {} ;</p>
<p>locate
updatedb</p>
<p>which  查找命令文件路径/别名信息
whereis</p>
<p>grep
1. -i 忽略大小写
2. -v 屏蔽 grep -v ^# /xxx/xxx</p>
<p>man
1. 1 命令的帮助
2. 5 配置文件的帮助  man 5 passwd</p>
<p>whatis  查命令
apropos 查配置文件
--help    toch --help  列出常见的选项
info  与man差不多
help 查看内置命令(whereis which找不到的命令)，shell命令</p>
<p>who
w
last
lastlog -u xxx</p>
<p>netstat -tlun
netstat -an</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[nginx学习笔记]]></title>
        <id>https://hectoraaphrodite.github.io//post/nginx-xue-xi-bi-ji</id>
        <link href="https://hectoraaphrodite.github.io//post/nginx-xue-xi-bi-ji">
        </link>
        <updated>2019-07-19T14:28:52.000Z</updated>
        <content type="html"><![CDATA[<p>方法</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[flask部署到centos]]></title>
        <id>https://hectoraaphrodite.github.io//post/flask-bu-shu-dao-centos</id>
        <link href="https://hectoraaphrodite.github.io//post/flask-bu-shu-dao-centos">
        </link>
        <updated>2019-07-18T14:54:44.000Z</updated>
        <content type="html"><![CDATA[<p>$gunicorn -w 4-b 0.0.0.0：8000 mwsgi：app</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[git bash 免密ssh 登录配置]]></title>
        <id>https://hectoraaphrodite.github.io//post/git-bash-mian-mi-ssh-deng-lu-pei-zhi</id>
        <link href="https://hectoraaphrodite.github.io//post/git-bash-mian-mi-ssh-deng-lu-pei-zhi">
        </link>
        <updated>2019-07-18T14:46:37.000Z</updated>
        <content type="html"><![CDATA[<ol>
<li>使用命令ssh-keygen ，生成私钥和公钥</li>
<li>私钥保存在本机~/.ssh下，公钥保存在服务器/root/.ssh下  密码直接回车，这样才能免密</li>
<li>cat id_rsa.pub &gt;&gt; authorized_keys</li>
<li>vim /etc/ssh/sshd_config 去掉#激活(AuthorizedKeysFile      .ssh/authorized_keys)</li>
<li>重启ssh服务，systemctl restart sshd.service 或 service sshd restart</li>
</ol>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[尝试跨境电商]]></title>
        <id>https://hectoraaphrodite.github.io//post/chang-shi-kua-jing-dian-shang</id>
        <link href="https://hectoraaphrodite.github.io//post/chang-shi-kua-jing-dian-shang">
        </link>
        <updated>2019-07-18T08:44:16.000Z</updated>
        <content type="html"><![CDATA[<ol>
<li>制作Logo</li>
<li>注册商标/注册美国公司</li>
<li>注册亚马逊卖家账号</li>
<li>安装辅助工具</li>
<li>选品</li>
<li>自建listing</li>
<li>挂载商品页面</li>
<li>结算渠道</li>
<li>引流seo优化</li>
<li>自建站</li>
<li>自动化工具</li>
<li>持续优化</li>
</ol>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[安全测试]]></title>
        <id>https://hectoraaphrodite.github.io//post/an-quan-ce-shi</id>
        <link href="https://hectoraaphrodite.github.io//post/an-quan-ce-shi">
        </link>
        <updated>2019-07-17T06:56:41.000Z</updated>
        <content type="html"><![CDATA[<ol>
<li>
<p>SQL注入
+ 如果直接将用户传入的数据作为参数使用字符串拼接的方式插入到SQL查询中，那么攻击者可以通过注入其他语句来执行攻击操作
+ 攻击者输入“'or 1=1--”
```SQL</p>
<pre><code> 	SELECT*FROM students WHERE password=''or 1=1--'；
 	
 	SELECT*FROM students WHERE password=''；drop table students；--'；
 	
 	SELECT * FROM Users WHERE Username='' AND Password=''
 	$username = 1' or '1' = '1
 	$password = 1' or '1' = '1
 	👇			
 	SELECT * FROM Users WHERE Username='1' OR '1' = '1' AND Password='1' OR '1' = '1'
</code></pre>
</li>
<li>
<p>XSS攻击</p>
<ol>
<li>反射型XSS攻击
<ul>
<li>又称为非持久型攻击，</li>
</ul>
</li>
<li>存储型XSS
<ul>
<li>又称持久型攻击</li>
<li>如果服务器接收数据后未经处理就存储到数据库中，就又可能发生此风险</li>
</ul>
</li>
<li>主要防范措施时对用户输入的内容进行转义</li>
</ol>
</li>
</ol>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[测试案例常用设计方法]]></title>
        <id>https://hectoraaphrodite.github.io//post/ce-shi-an-li-chang-yong-she-ji-fang-fa</id>
        <link href="https://hectoraaphrodite.github.io//post/ce-shi-an-li-chang-yong-she-ji-fang-fa">
        </link>
        <updated>2019-07-16T17:26:50.000Z</updated>
        <content type="html"><![CDATA[<ol>
<li>
<p>等价类划分</p>
</li>
<li>
<p>边界值分析</p>
</li>
<li>
<p>决策表</p>
</li>
<li>
<p>状态转换测试</p>
</li>
<li>
<p>分类树方法</p>
</li>
<li>
<p>结对测试</p>
</li>
</ol>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Oracle学习]]></title>
        <id>https://hectoraaphrodite.github.io//post/oracle-xue-xi</id>
        <link href="https://hectoraaphrodite.github.io//post/oracle-xue-xi">
        </link>
        <updated>2019-07-16T11:57:24.000Z</updated>
        <content type="html"><![CDATA[<ol>
<li>关键字不能作为表的列名或表名
SELECT * FROM V$RESERVED_WORDS WHERE keword IN ('WHRE','DATE','DROP','ALTER');</li>
<li>查询数据库用户
SELECT username,accout_status,created FROM dba_users;</li>
<li>创建用户
CREAT USER mai IDENTIFIED BY thepassword;</li>
<li>新建&gt;命令窗口 进入交互模式</li>
<li>SELECT 列名... FROM 表名 WHERE 限定语句; 避免使用SELECT * ... 会增加系统开销</li>
<li>dual表的用途
<ol>
<li>基本的算术运算： SELECT (10+20)/2 FROM dual;
四舍五入：SELECT ROUND((12+17)/3,2) FROM dual;
求余: SELECT MOD(3/2) FROM dual;</li>
<li>获取当前时间： SELECT SYSDATE FROM dual;
SELECT SYSDATE-to_date('2019-07-16 22:30:15','yyyy-MM-DD hh24:mi:ss')</li>
</ol>
</li>
<li>NVL(expr1,expr2) 转换一个空值到一个实际的值（解决场景：一个列的值加上一个空值会得到空，如果再乘以一个数也会时空，所以可以用nvl先把空值转换为0）</li>
<li>别名  AS(可省略 ，空格后直接接别名),中文别名必须用双引号括起来(也只有别名用双引号)</li>
<li>字符串连接符 ||</li>
<li>DISTINCT 去重
SELECT DISTINCT  ... FROM ...;</li>
<li>regexp_like,regexp_instr</li>
<li>having可以使用聚合函数</li>
<li>不等于 &lt;&gt; 或者 !=</li>
<li>
<blockquote>
<p>ALL 大于最大的； &lt;ALL大于最小的； &gt;ANY 大于最小的 &lt;ANY小于最大的</p>
</blockquote>
</li>
<li>通配符  %匹配0个或多个 _匹配单个</li>
<li>转义
SELECT * FROM ... WHERE a = '%%%' ESCAPE ''</li>
<li>如果值什么都没有  is null,  ='' 和 =null 都匹配不到</li>
<li>逻辑运算符 NOT AND OR  ,要改变运算顺序可以用括号</li>
<li>排序  SELECT .. FROM .. ORDER BY EXP1,EXP2 DESC;</li>
<li>常用函数
<ol>
<li>LOWER</li>
<li>UPPER</li>
<li>INITCAP</li>
<li>NVL</li>
<li>DECODE</li>
<li>CONCAT</li>
<li>SUBSTR</li>
<li>LENGTH</li>
<li>INSTR</li>
<li>LPAD</li>
<li>RPAD</li>
<li>LTRIM</li>
<li>RTRIM</li>
<li>TRIM</li>
<li>ROUND</li>
<li>TRUNC</li>
<li>MOD</li>
<li>POWER</li>
<li>SIGN</li>
<li>ASCII</li>
<li>CHR</li>
<li>TO_CHAR</li>
<li>TO_DATE</li>
<li></li>
</ol>
</li>
</ol>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[数据库测试]]></title>
        <id>https://hectoraaphrodite.github.io//post/shu-ju-ku-ce-shi</id>
        <link href="https://hectoraaphrodite.github.io//post/shu-ju-ku-ce-shi">
        </link>
        <updated>2019-07-16T10:58:45.000Z</updated>
        <content type="html"><![CDATA[<ol>
<li>表设计是否合理：包括可扩展性、索引、主键、外键、非空、默认值。。。</li>
<li>触发器是否合理，影响性能</li>
<li>存储过程是否设计合理，性能调优</li>
<li>sql的逻辑是否符合业务需求</li>
<li>sql的性能调优</li>
</ol>
<p><a href="https://blog.csdn.net/test_soy/article/details/48344661">test</a></p>
]]></content>
    </entry>
</feed>